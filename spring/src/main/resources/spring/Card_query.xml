<?xml version="1.0" encoding="UTF-8" ?>

<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd"> 
<mapper namespace="com.ssafy.project.dao.CardDao" >
   	
   	<insert id="insertCard" 
   		parameterType="card" 
		useGeneratedKeys="true"
		keyProperty="card_id">
   		insert into card(cardlist_id, card_name, card_contents, card_secret)
   		values(#{cardlist_id}, #{card_name}, #{card_contents}, #{card_secret})
   	</insert>
   	  	  	
  	<select id="search" parameterType="int" resultType="card">
		select * 
		from card
		where card_id = #{card_id}
	</select>
	
	<update id="updateCard" parameterType="card">
		update card
		set	
		card_name = #{card_name},
		card_contents = #{card_contents},
		card_secret = #{card_secret}
		where card_id = #{card_id}
	</update>
  	
  	<delete id="deleteCard" parameterType="int">
		delete
		from card
		where card_id = #{card_id}
	</delete>
	
	<select id="getMaxCardId" resultType="int">
		select max(card_id)
		from card
	</select>
	
	<select id="countPublicDailyCard" parameterType="string" resultType="board">
		select count(card_id) as board_id, d.board_date
		from card e,
			(select cardlist_id, b.board_date
			from cardlist c, 
				(select board_id, board_date
				from board
				where mem_id = #{mem_id}
				and board_type = 'daily'
				and board_date between #{from} and #{to}) b
			where c.board_id = b.board_id) d
		where e.cardlist_id = d.cardlist_id
		and card_secret = false
		group by d.board_date
	</select>
	
	<select id="countAllDailyCard" parameterType="string" resultType="board">
		select count(card_id) as board_id, d.board_date
		from card e,
			(select cardlist_id, b.board_date
			from cardlist c, 
				(select board_id, board_date
				from board
				where mem_id = #{mem_id}
				and board_type = 'daily'
				and board_date between #{from} and #{to}) b
			where c.board_id = b.board_id) d
		where e.cardlist_id = d.cardlist_id
		group by d.board_date
	</select>
  	
</mapper>